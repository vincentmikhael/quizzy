{"version":3,"sources":["App.js","components/Setup.js","components/Loading.js","components/FinishBox.js","components/Quiz.js","router.js","serviceWorker.js","index.js"],"names":["App","className","src","alt","to","href","target","width","height","Setup","state","name","category","noQuestion","handleForm","bind","e","parentElement","classList","add","nextElementSibling","remove","previousElementSibling","value","this","setState","type","autoComplete","onChange","placeholder","onClick","nextBtn","disabled","id","backBtn","style","pointerEvents","opacity","React","Component","Loading","FinishBox","props","user","score","Quiz","isLoading","questions","question","answer","index","correct_answer","userAnswer","isTrue","isSubmit","isClicked","nextQuiz","userClicked","userSubmit","fetch","match","params","number","then","res","json","data","results","loadQuestion","quest","map","prev","shuffle","incorrect_answers","correct_index","indexOf","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","getAttribute","document","querySelectorAll","forEach","querySelector","unsafe","replace","i","key","data-val","convert","routes","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"4OAuCeA,MApCf,WACE,OACE,yBAAKC,UAAU,kCACX,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,eACjB,yBAAKA,UAAU,oBACf,yBAAKC,IAAI,0HAA0HC,IAAI,MAEvI,yBAAKF,UAAU,2BAAf,+BACF,6BACE,kBAAC,IAAD,CAAMG,GAAG,SAASH,UAAU,yFAA5B,aACA,uBAAGA,UAAU,yCAAb,4CAA8F,uBAAGA,UAAU,kBAAkBI,KAAK,0CAApC,mBAA9F,OAID,yBAAKJ,UAAU,mFACf,uBAAGK,OAAO,QAAQD,KAAK,8CAA8CJ,UAAU,WAC/E,yBAAKA,UAAU,QACb,yBAAKC,IAAI,iDAAiDK,MAAM,KAAKC,OAAO,KAAKL,IAAI,OAGrF,uBAAGG,OAAO,QAAQD,KAAK,6CAA6CJ,UAAU,WAC9E,yBAAKA,UAAU,QACf,yBAAKC,IAAI,kDAAkDK,MAAM,KAAKC,OAAO,KAAKL,IAAI,OAGtF,uBAAGG,OAAO,QAAQD,KAAK,wCAAwCJ,UAAU,WACzE,yBAAKA,UAAU,QACf,yBAAKC,IAAI,mDAAmDK,MAAM,KAAKC,OAAO,KAAKL,IAAI,U,8CC8EjFM,E,kDAxGX,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTC,KAAM,GACNC,SAAU,GACVC,WAAY,IAEhB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAPT,E,oDAULC,GACJA,EAAEV,OAAOW,cAAcC,UAAUC,IAAI,UACrCH,EAAEV,OAAOW,cAAcG,mBAAmBF,UAAUG,OAAO,Y,8BAEvDL,GACJA,EAAEV,OAAOW,cAAcA,cAAcC,UAAUC,IAAI,UACnDH,EAAEV,OAAOW,cAAcA,cAAcK,uBAAuBJ,UAAUG,OAAO,Y,iCAEtEL,GAAG,IAAD,EACaA,EAAEV,OAAjBK,EADE,EACFA,KAAMY,EADJ,EACIA,MAEbC,KAAKC,SAAL,eACKd,EAAOY,M,+BAKZ,OACI,6BACA,yBAAKtB,UAAU,2CACd,yBAAKA,UAAU,oIACX,yBAAKA,UAAU,+DACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,0BAGnB,wBAAIA,UAAU,sCAAd,mBAEA,2BAAOyB,KAAK,OAAOC,aAAa,MAAMJ,MAAOC,KAAKd,MAAMC,KAAMiB,SAAUJ,KAAKV,WAAYH,KAAK,OAAOV,UAAU,sDAAsD4B,YAAY,oBACjL,uBAAG5B,UAAU,wBAAyBuB,KAAKd,MAAMC,KAAmC,GAA/C,2BAErC,4BAAQV,UAAU,0HAA0H6B,QAASN,KAAKO,QAASC,UAAUR,KAAKd,MAAMC,MAAxL,SAGJ,yBAAKV,UAAU,sEACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,yBACf,yBAAKA,UAAU,6BAGnB,wBAAIA,UAAU,sCAAd,qBACA,yBAAKA,UAAU,iBAEX,yBAAKA,UAAU,yBACf,2BAAOA,UAAU,8BAAjB,uBACA,yBAAKA,UAAU,UACX,yBAAKA,UAAU,aACnB,4BAAQsB,MAAOC,KAAKd,MAAMG,WAC1Be,SAAUJ,KAAKV,WAAYH,KAAK,aAAaV,UAAU,6KAA6KgC,GAAG,cACtP,4BAAQV,MAAM,MAAd,YACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,SAKW,yBAAKtB,UAAU,yBACX,2BAAOA,UAAU,8BAAjB,YACA,yBAAKA,UAAU,UACX,yBAAKA,UAAU,aACnB,4BAAQsB,MAAOC,KAAKd,MAAME,SAAUD,KAAK,WAAWiB,SAAUJ,KAAKV,WAAYb,UAAU,6KAA6KgC,GAAG,cACxR,4BAAQV,MAAM,MAAd,YACA,4BAAQA,MAAM,MAAd,QACA,4BAAQA,MAAM,MAAd,SACA,4BAAQA,MAAM,MAAd,eACA,4BAAQA,MAAM,MAAd,sBACA,4BAAQA,MAAM,MAAd,8BASY,yBAAKtB,UAAU,QACf,4BAAQA,UAAU,yHAAyH6B,QAASN,KAAKU,SAAzJ,QACD,kBAAC,IAAD,CAAM9B,GAAE,gBAAWoB,KAAKd,MAAMC,KAAtB,YAA8Ba,KAAKd,MAAME,SAAzC,YAAqDY,KAAKd,MAAMG,YAAcZ,UAAU,2HAA2HkC,MAAQX,KAAKd,MAAMG,YAAeW,KAAKd,MAAME,SACvP,KADkQ,CAACwB,cAAe,OAClSC,QAAS,KADV,qB,GA5FDC,IAAMC,W,QCIXC,MANf,WACC,OACI,yBAAKvC,UAAU,YC0BLwC,E,uKAxBP,OACI,yBAAKxC,UAAU,0CAEf,yBAAKA,UAAU,UAAUC,IAAI,kDAAkDK,MAAM,MAAMC,OAAO,MAAML,IAAI,KAC5G,yBAAKF,UAAU,0BACf,uBAAGA,UAAU,0DAAb,oBACA,uBAAGA,UAAU,oDAAoDuB,KAAKkB,MAAMC,MAExE,uBAAG1C,UAAU,gDAAb,eAJJ,IAIgF,uBAAGA,UAAU,wEAAwEuB,KAAKkB,MAAME,OAC5K,6BACA,yBAAK3C,UAAU,IACf,yBAAKA,UAAU,iCACf,kBAAC,IAAD,CAAMG,GAAG,SAASH,UAAU,0EAA5B,eACA,kBAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,wEAAvB,gB,GAhBQqC,IAAMC,WC+KfM,E,kDA5KP,aAAc,IAAD,8BACT,gBACKnC,MAAQ,CACToC,WAAW,EACXH,KAAM,GACNI,UAAW,GACXC,SAAU,GACVC,OAAS,GACTC,MAAO,EACPC,eAAgB,GAChBC,WAAY,GACZC,QAAQ,EACRC,UAAU,EACVV,MAAO,EACPW,WAAW,GAEf,EAAKC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,YAAc,EAAKA,YAAY1C,KAAjB,gBACnB,EAAK2C,WAAa,EAAKA,WAAW3C,KAAhB,gBAlBT,E,gEAqBG,IAAD,OACfS,KAAKC,SAAS,CACVqB,WAAW,IAEfa,MAAM,sCAAD,OAAuCnC,KAAKkB,MAAMkB,MAAMC,OAAOC,OAA/D,qBAAkFtC,KAAKkB,MAAMkB,MAAMC,OAAOjD,SAA1G,mBACJmD,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACjBF,MAAK,SAACG,GACH,EAAKzC,SAAS,CACVqB,WAAW,EACXC,UAAWmB,EAAKC,QAChBxB,KAAM,EAAKD,MAAMkB,MAAMC,OAAOlD,OAElC,EAAKyD,oB,qCAME,IAAD,OACNC,EAAQ7C,KAAKd,MAAMqC,UAAUuB,KAAI,SAAAtD,GAAC,OAAIA,KACtCQ,KAAKC,UAAS,SAAC8C,GACX,MAAO,CACHvB,SAAUqB,EAAM,EAAK3D,MAAMwC,OAAOF,SAClCC,OAAQ,EAAKuB,QAAL,sBAAiBH,EAAM,EAAK3D,MAAMwC,OAAOuB,mBAAzC,CAA4DJ,EAAM,EAAK3D,MAAMwC,OAAOC,kBAC5FuB,cAAe,EAAKhE,MAAMuC,OAAO0B,QAAQN,EAAM,EAAK3D,MAAMwC,OAAOC,gBACjEA,eAAgBkB,EAAM,EAAK3D,MAAMwC,OAAOC,qB,8BAOhDyB,GAIJ,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,I,kCAGG5D,GACNQ,KAAKd,MAAM4C,WACX9B,KAAKC,SAAS,CACV2B,WAAYpC,EAAEV,OAAO8E,aAAa,cAE1BC,SAASC,iBAAiB,eACpCC,SAAQ,SAACvE,GACXA,EAAEE,UAAUG,OAAO,gBAEvBL,EAAEV,OAAOY,UAAUC,IAAI,aACvBK,KAAKC,SAAS,CACV8B,WAAW,O,iCAKNvC,GACNQ,KAAKd,MAAM0C,aAAe5B,KAAKd,MAAMyC,iBACpC3B,KAAKC,UAAS,SAAC8C,GACX,MAAM,CACF3B,MAAO2B,EAAK3B,MAAQ,OAG5BpB,KAAKC,SAAS,CACV4B,QAAQ,KAGhB7B,KAAKC,SAAS,CACV6B,UAAU,EACVC,WAAW,M,iCAKZ/B,KAAKd,MAAMwC,MAAQ,IAAM1B,KAAKd,MAAMqC,UAAUiC,OAC7CK,SAASG,cAAc,WAAWtE,UAAUG,OAAO,WAEnDG,KAAKC,UAAS,SAAC8C,GACX,MAAO,CACHrB,MAAOqB,EAAKrB,QACZC,eAAgB,GAChBC,WAAY,GACZE,UAAU,EACVD,QAAQ,MAGhB7B,KAAK4C,kB,8BAILqB,GACJ,OAAOA,EACLC,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,UAAW,KACnBA,QAAQ,UAAW,O,+BAGhB,IAAD,OACAzC,EAASzB,KAAKd,MAAMuC,OAAOqB,KAAI,SAACtD,EAAE2E,GACtC,OAAO,yBAAKC,IAAKD,EAAG7D,QAAS,EAAK2B,YAAaoC,WAAU7E,EAAGf,UAAU,2DAA2D,EAAK6F,QAAQ9E,GAE7I,EAAKN,MAAM2C,QAAUrC,IAAM,EAAKN,MAAMyC,gBAAkB,EAAKzC,MAAM4C,SAAW,uBAAGrD,UAAU,0CAAyC,yBAAKC,IAAI,mDAAmDK,MAAM,KAAKC,OAAO,KAAKL,IAAI,MAAY,GAEvO,EAAKO,MAAM4C,UAAYtC,IAAM,EAAKN,MAAM0C,YAAc,EAAK1C,MAAMyC,iBAAmBnC,EAAK,uBAAGf,UAAU,0CAAyC,yBAAKC,IAAI,oDAAoDK,MAAM,KAAKC,OAAO,KAAKL,IAAI,MAAY,OAIpP,OACI,yBAAKF,UAAU,4CAEX,yBAAKA,UAAU,0GACvB,yBAAKA,UAAU,uEAAuEuB,KAAKd,MAAMkC,OACjG,yBAAK3C,UAAU,4FAA4FuB,KAAKd,MAAMwC,MAAQ,EAA9H,IAAkI1B,KAAKd,MAAMqC,UAAUiC,OAAS,GAChJ,yBAAK/E,UAAU,oDAAf,eACA,yBAAKA,UAAU,0EACVuB,KAAKd,MAAMoC,UAAY,kBAAC,EAAD,MAActB,KAAKsE,QAAQtE,KAAKd,MAAMsC,WAElE,yBAAK/C,UAAU,gCACVgD,GAGL,yBAAKhD,UAAU,uBACX,4BACC6B,QAASN,KAAKkC,WACdzD,UAAU,qEAAqE+B,UAAWR,KAAKd,MAAM6C,WAFtG,UAGA,4BAAQtD,UAAU,sEAAsE6B,QAASN,KAAKgC,SAAUxB,UAAUR,KAAKd,MAAM4C,UAArI,UAIZ,yBAAKrB,GAAG,SAAShC,UAAU,UAC3B,yBAAMA,UAAU,eAChB,kBAAC,EAAD,CAAW0C,KAAMnB,KAAKd,MAAMiC,KAAMC,MAAOpB,KAAKd,MAAMkC,e,GArKjDL,aCcJwD,MAbf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlG,IACjC,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,SAASC,UAAWzF,IACtC,kBAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,gCAAgCC,UAAWrD,IAC7D,kBAAC,IAAD,CAAOqD,UAAWlG,OCDdmG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1C,MACvB,2DCZN2C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,yBAAKxG,UAAU,8BACb,yBAAKA,UAAU,aAAY,kBAAC,EAAD,SAG/BoF,SAASqB,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9C,MAAK,SAAA+C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bd64cc7e.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"banner text-white  text-center\">\n        <div className=\"flex banner-main justify-center relative z-10\">\n          <div className=\"banner-text\">\n        <div className=\"img mt-8 mx-auto\">\n        <img src=\"https://igerreff.sirv.com/Images/trivia/kisspng-trivia-logo-game-sporcle-quiz-5b0ab9548291b0.3110410115274294605348.png\" alt=\"\" />\n        </div>\n        <div className=\"text-4xl font-extrabold\">PLAY FUN TRIVIA QUIZ NOW ! </div>\n      <br/>\n        <Link to=\"/setup\" className=\"py-2 text-2xl px-12 border-4 border-purple-300 hover:bg-purple-600 hover:text-white  \">PLAY NOW!</Link>\n        <p className=\"mt-8 w-64 font-medium text-lg mx-auto\">A interactive Quiz made with React JS by <a className=\"text-yellow-400\" href=\"https://instagram.com/vincent.mikhaell\">Vincent Mikhael</a> </p>\n        </div>\n        </div>\n       \n       <div className=\"absolute flex flex-col justify-center bottom-0 bg-white p-1 rounded-full left-0\">\n       <a target=\"blank\" href=\"https://www.facebook.com/vincent.mikhael.3/\" className=\"mx-auto\">\n       <div className=\"icon\">\n         <img src=\"https://igerreff.sirv.com/Images/trivia/fb.png\" width=\"40\" height=\"40\" alt=\"\" />\n         </div>\n       </a>\n         <a target=\"blank\" href=\"https://www.instagram.com/vincent.mikhaell\" className=\"mx-auto\">\n         <div className=\"icon\">\n         <img src=\"https://igerreff.sirv.com/Images/trivia/fig.png\" width=\"30\" height=\"30\" alt=\"\" />\n         </div>\n         </a>\n         <a target=\"blank\" href=\"https://www.github.com/vincentmikhael\" className=\"mx-auto\">\n         <div className=\"icon\">\n         <img src=\"https://igerreff.sirv.com/Images/trivia/fgit.png\" width=\"40\" height=\"40\" alt=\"\" />\n         </div>\n         </a>\n         </div>     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nclass Setup extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            name: \"\",\r\n            category: \"\",\r\n            noQuestion: \"\"\r\n        }\r\n        this.handleForm = this.handleForm.bind(this)\r\n    }\r\n\r\n    nextBtn(e){\r\n        e.target.parentElement.classList.add('hidden')\r\n        e.target.parentElement.nextElementSibling.classList.remove('hidden')\r\n    }\r\n    backBtn(e){\r\n        e.target.parentElement.parentElement.classList.add('hidden')\r\n        e.target.parentElement.parentElement.previousElementSibling.classList.remove('hidden')\r\n    }\r\n    handleForm(e){\r\n        const {name, value} = e.target\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <div className=\"banner flex justify-center items-center\">\r\n             <div className=\"setup border-t-8 border-b-8 border-yellow-400 flex overflow-hidden justify-center items-center rounded-lg bg-white relative z-10\">\r\n                 <div className=\"setup1 py-8 w-100 flex justify-center items-center flex-col\">\r\n                     <div className=\"flex bg-blue-200 rounded-full\">\r\n                         <div className=\"menu-circle bg-blue-500\"></div>\r\n                         <div className=\"menu-circle bg-white\"></div>\r\n    \r\n                     </div>\r\n                     <h1 className=\"text-4xl text-purple-500 font-bold\">Enter your name</h1>\r\n                      \r\n                     <input type=\"text\" autoComplete=\"off\" value={this.state.name} onChange={this.handleForm} name=\"name\" className=\"bg-gray-300 rounded-lg text-2xl mt-8 h-12 px-4 py-4\" placeholder=\"Input Your Name\" />\r\n                     <p className=\"text-red-300 text-sm\">{!this.state.name ? `Please enter your name!` : ''}</p>\r\n    \r\n                     <button className=\"px-16 mt-8 border rounded-full px-8 md:px-16 py-2 md:py-4 next-btn text-lg bg-orange-400 text-white hover:bg-orange-600\" onClick={this.nextBtn} disabled={this.state.name ? false : true}>NEXT</button>\r\n\r\n                 </div>\r\n                 <div className=\"setup2 hidden py-8 w-100 flex justify-center items-center flex-col\">\r\n                     <div className=\"flex bg-blue-200 rounded-full\">\r\n                         <div className=\"menu-circle bg-white\"></div>\r\n                         <div className=\"menu-circle bg-blue-500\"></div>\r\n    \r\n                     </div>\r\n                     <h1 className=\"text-4xl text-orange-500 font-bold\">Generate Question</h1>\r\n                     <div className=\"md:flex block\">\r\n\r\n                         <div className=\"flex flex-col md:mr-4\">\r\n                         <label className=\"mt-4 text-blue-600 text-xl\">Number of questions</label>\r\n                         <div className=\"select\">\r\n                             <div className=\"arrow-up\"></div>\r\n                         <select value={this.state.noQuestion} \r\n                         onChange={this.handleForm} name=\"noQuestion\" className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-state\">\r\n          <option value=\"31\">Question</option>\r\n          <option value='6'>5</option>\r\n          <option value='11'>10</option>\r\n          <option value='26'>25</option>\r\n          <option value='36'>35</option>\r\n          <option value='50'>50</option>\r\n        </select>\r\n        </div>\r\n                         </div>\r\n\r\n                     <div className=\"flex flex-col md:ml-4\">\r\n                         <label className=\"mt-4 text-xl text-blue-600\">Category</label>\r\n                         <div className=\"select\">\r\n                             <div className=\"arrow-up\"></div>\r\n                         <select value={this.state.category} name=\"category\" onChange={this.handleForm} className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-state\">\r\n          <option value=\"11\">Category</option>\r\n          <option value=\"11\">Film</option>\r\n          <option value=\"12\">Music</option>\r\n          <option value=\"15\">Video Games</option>\r\n          <option value=\"18\">Science: Computers</option>\r\n          <option value=\"31\">Japanese Anime & Manga</option>\r\n\r\n        </select>\r\n        </div>\r\n                         </div> \r\n                     \r\n                     </div>\r\n                    \r\n                         \r\n                      <div className=\"flex\">\r\n                      <button className=\"px-8 md:px-16 mt-8 border rounded-full next-btn text-md md:text-xl py-2 md:py-4 bg-red-500 text-white hover:bg-red-400\" onClick={this.backBtn}>BACK</button>\r\n                     <Link to={`/quiz/${this.state.name}/${this.state.category}/${this.state.noQuestion}`} className=\"px-8 md:px-16 mt-8 border rounded-full next-btn text-md md:text-xl py-2 md:py-4 bg-blue-500 text-white hover:bg-blue-400\" style={!this.state.noQuestion || !this.state.category ? {pointerEvents: \"none\",\r\n                      opacity: 0.5} : null}>GENERATE</Link>\r\n                      </div>\r\n                     \r\n                 </div>\r\n    \r\n             </div>\r\n             </div>\r\n             </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Setup","import React from 'react'\r\n\r\nfunction Loading(){\r\n return (\r\n     <div className=\"loader\"></div>\r\n )\r\n}\r\n\r\nexport default Loading","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass FinishBox extends React.Component {\r\n\r\n    render (){\r\n        return(\r\n            <div className=\"text-white rounded-lg pt-2 bg-blue-200\">\r\n\r\n            <img className=\"mx-auto\" src=\"https://igerreff.sirv.com/Images/trivia/win.png\" width=\"200\" height=\"200\" alt=\"\" />\r\n            <div className=\"bg-blue-300 py-2 px-16\">\r\n            <p className=\"text-purple-700 text-center font-bold text-4xl mx-auto\">Congratulations!</p>\r\n            <p className=\"text-center text-4xl font-medium text-indigo-600\">{this.props.user}</p>\r\n            \r\n                <p className=\"text-lg text-red-500 font-medium text-center\">Your score!</p> <p className=\"text-red-600 text-xl font-bold p-2 rounded-full bg-white text-center\">{this.props.score}</p> \r\n                <br/>\r\n                <div className=\"\">\r\n                <div className=\"flex justify-center flex-wrap\">\r\n                <Link to=\"/setup\" className=\"px-4 rounded-full flex-1 m-2 py-2 bg-orange-400 text-center text-white\">PLAY AGAIN!</Link>\r\n                <Link to=\"/\" className=\"px-4 flex-1 m-2 py-2 bg-pink-600 rounded-full text-center text-white\">HOME</Link>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FinishBox","import React, {Component} from 'react'\r\nimport Loading from './Loading'\r\nimport FinishBox from './FinishBox'\r\n\r\n\r\nclass Quiz extends Component {\r\n        constructor(){\r\n            super()\r\n            this.state = {\r\n                isLoading: false,\r\n                user: '',\r\n                questions: [],\r\n                question: '',\r\n                answer : [],\r\n                index: 0,\r\n                correct_answer: '',\r\n                userAnswer: '',\r\n                isTrue: false,\r\n                isSubmit: false,\r\n                score: 0,\r\n                isClicked: false\r\n            }\r\n            this.nextQuiz = this.nextQuiz.bind(this)\r\n            this.userClicked = this.userClicked.bind(this)\r\n            this.userSubmit = this.userSubmit.bind(this)\r\n        }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        fetch(`https://opentdb.com/api.php?amount=${this.props.match.params.number}&category=${this.props.match.params.category}&type=multiple`)\r\n        .then((res)=> res.json())\r\n        .then((data)=> {\r\n            this.setState({\r\n                isLoading: false,\r\n                questions: data.results,\r\n                user: this.props.match.params.name\r\n            })\r\n            this.loadQuestion()\r\n        })\r\n          \r\n\r\n    }\r\n\r\n    loadQuestion(){\r\n        let quest = this.state.questions.map(e => e)\r\n            this.setState((prev)=>{\r\n                return {\r\n                    question: quest[this.state.index].question,\r\n                    answer: this.shuffle([...quest[this.state.index].incorrect_answers, quest[this.state.index].correct_answer]),\r\n                    correct_index: this.state.answer.indexOf(quest[this.state.index].correct_answer),\r\n                    correct_answer: quest[this.state.index].correct_answer,\r\n                }\r\n                }  \r\n                )\r\n    }\r\n\r\n    \r\n    shuffle(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n      \r\n          // Pick a remaining element...\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex -= 1;\r\n      \r\n          // And swap it with the current element.\r\n          temporaryValue = array[currentIndex];\r\n          array[currentIndex] = array[randomIndex];\r\n          array[randomIndex] = temporaryValue;\r\n        }\r\n        return array;\r\n      }\r\n\r\n      userClicked(e){\r\n        if(!this.state.isSubmit){\r\n            this.setState({\r\n                userAnswer: e.target.getAttribute(\"data-val\")\r\n            })\r\n            let color = document.querySelectorAll('.answer-box')\r\n        color.forEach((e) =>{\r\n            e.classList.remove('bg-tomato')\r\n        })\r\n        e.target.classList.add('bg-tomato')\r\n        this.setState({\r\n            isClicked: true\r\n        })\r\n        }\r\n      }\r\n\r\n      userSubmit(e){\r\n        if(this.state.userAnswer === this.state.correct_answer){\r\n            this.setState((prev)=>{\r\n                return{\r\n                    score: prev.score + 1 * 25,\r\n                }\r\n            })\r\n            this.setState({\r\n                isTrue: true\r\n            })        \r\n        }\r\n        this.setState({\r\n            isSubmit: true,\r\n            isClicked: false\r\n        })\r\n      }\r\n       \r\n      nextQuiz(){\r\n        if(this.state.index + 2 === this.state.questions.length){\r\n            document.querySelector('#finish').classList.remove('hidden')\r\n        }else{\r\n            this.setState((prev)=>{\r\n                return {\r\n                    index: prev.index++,\r\n                    correct_answer: '',\r\n                    userAnswer: '',\r\n                    isSubmit: false,\r\n                    isTrue: false,\r\n                }\r\n            })\r\n            this.loadQuestion()\r\n        }\r\n    }\r\n\r\n    convert(unsafe) {\r\n        return unsafe\r\n         .replace(/&amp;/g, \"&\")\r\n         .replace(/&lt;/g, \"<\")\r\n         .replace(/&gt;/g, \">\")\r\n         .replace(/&#039;/g, \"'\")\r\n         .replace(/&quot;/g, '\"')\r\n      }\r\n\r\n    render(){\r\n        let answer = this.state.answer.map((e,i) => {\r\n        return <div key={i} onClick={this.userClicked} data-val={e} className=\"answer-box border-4 border-yellow-400 relative bg-white\">{this.convert(e)}\r\n        \r\n        {this.state.isTrue && e === this.state.correct_answer && this.state.isSubmit ? <p className=\"absolute true top-0 bottom-0 ml-4 mt-2\"><img src=\"https://igerreff.sirv.com/Images/trivia/true.png\" width=\"30\" height=\"30\" alt=\"\" /></p> : ''}\r\n\r\n        {this.state.isSubmit && e === this.state.userAnswer && this.state.correct_answer !== e  ? <p className=\"absolute true top-0 bottom-0 ml-4 mt-2\"><img src=\"https://igerreff.sirv.com/Images/trivia/false.png\" width=\"20\" height=\"20\" alt=\"\" /></p> : ''}\r\n        </div>\r\n        })\r\n\r\n        return (\r\n            <div className=\"bg-quiz flex justify-center items-center\">\r\n\r\n                <div className=\"container-quiz border-t-8 border-b-8 border-yellow-400 w-full md:w-1/2  py-8 relative z-10 bg-blue-400\">\r\n        <div className=\"score top-0 ml-1 mt-1 p-4 text-white font-bold  absolute bg-red-500\">{this.state.score}</div>\r\n        <div className=\"score top-0 right-0 p-4 text-white font-bold rounded-full absolute mt-1 mr-1 bg-teal-500\">{this.state.index + 1}/{this.state.questions.length - 1}</div>\r\n                        <div className=\"text-center text-4xl text-white mb-4 trivia-text\">TRIVIA QUIZ</div>\r\n                        <div className=\"question text-xl px-2 md:px-32 py-4 bg-blue-600 text-center text-white\">\r\n                            {this.state.isLoading ? <Loading /> : this.convert(this.state.question)}\r\n                        </div>\r\n                        <div className=\"answer-cont mt-8 font-medium\">\r\n                            {answer}\r\n                        </div>\r\n                        \r\n                        <div className=\"flex justify-evenly\">\r\n                            <button\r\n                             onClick={this.userSubmit}\r\n                             className=\"px-6 py-2 text-white bg-green-500 rounded-full hover:bg-green-600 \" disabled={!this.state.isClicked ? true : false}>Submit</button>\r\n                            <button className=\"px-6 py-2 text-white bg-purple-500 hover:bg-purple-600 rounded-full\" onClick={this.nextQuiz} disabled={this.state.isSubmit ? false : true}>Next</button>\r\n                        </div>\r\n                </div>\r\n                \r\n                <div id=\"finish\" className=\"hidden\">\r\n                <div  className=\"finish-box \">\r\n                <FinishBox user={this.state.user} score={this.state.score}/>\r\n                </div>\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz","import React from 'react';\r\nimport { BrowserRouter as Router, Route,Switch} from 'react-router-dom';\r\nimport App from './App'\r\nimport Setup from './components/Setup'\r\nimport Quiz from './components/Quiz'\r\n\r\nfunction routes() {\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={App} />\r\n                <Route exact path=\"/setup\" component={Setup} />\r\n                <Route exact path=\"/quiz/:name/:category/:number\" component={Quiz}/>\r\n                <Route component={App}/>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default routes\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css'\nimport Router from './router'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"flex flex-col min-h-screen\">\n      <div className=\"flex-grow\"><Router /></div>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}